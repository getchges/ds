#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* top = NULL;

int isEmpty() {
    return (top == NULL);
}

struct Node* createNode(int x) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    if (newNode) {
        newNode->data = x;
        newNode->next = NULL;
    }
    return newNode;
}

void push(int x) {
    struct Node* newNode = createNode(x);
    newNode->next = top;
    top = newNode;
}

int pop() {
    if (isEmpty()) {
        printf("Underflow\n");
        return -1;
    } else {
        struct Node* temp = top;
        int x = temp->data;
        top = top->next;
        free(temp);
        return x;
    }
}

void peek() {
    if (isEmpty())
        printf("Stack is empty\n");
    else
        printf("Top element: %d\n", top->data);
}

void create() {
    top = NULL;
}

int main() {
    int choice, val;
    printf("1. Push\n2. Pop\n3. Peek\n4. Check if empty\n5. Exit\n");
    while (1) {
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to push: ");
                scanf("%d", &val);
                push(val);
                break;
            case 2:
                val = pop();
                if (val != -1)
                    printf("Popped value: %d\n", val);
                break;
            case 3:
                peek();
                break;
            case 4:
                if (isEmpty())
                    printf("Stack is empty\n");
                else
                    printf("Stack is not empty\n");
                break;
            case 5:
                return 0;
            default:
                printf("Invalid choice\n");
        }
    }
}
