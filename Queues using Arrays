#include <stdio.h>
#define max 100

int front = -1;
int rear = -1;
int queue[max];

void enqueue(int x) {
    if (rear == max-1)
        printf("Overflow\n");
    else if (front == -1 && rear == -1) {
        front++;
        rear++;
        queue[rear] = x;
    } else {
        rear++;
        queue[rear] = x;
    }
}

int dequeue() {
    int e;
    if (front == -1 && rear == -1)
        printf("Underflow\n");
    else if (rear < front)
        printf("Underflow\n");
    else {
        e = queue[front];
        front++;
        return e;
    }
    return -1;
}

void display() {
    if (front == -1 && rear == -1)
        printf("Queue is empty\n");
    else {
        printf("Queue elements: ");
        for (int i = front; i <= rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}

int isempty() {
    return (front == -1 && rear == -1);
}

int count() {
    if (front == -1 && rear == -1)
        return 0;
    else
        return (rear - front + 1);
}

int main() {
    int choice, val;

        printf("1. Enqueue\n2. Dequeue\n3. Display Queue\n4. Check if empty\n5. Number of elements\n6. Exit\n");
    while (1) {
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter val: ");
                scanf("%d", &val);
                enqueue(val);
                break;
            case 2:
                val = dequeue();
                if (val != -1)
                    printf("Dequeued val: %d\n", val);
                break;
            case 3:
                display();
                break;
            case 4:
                if (isempty())
                    printf("Queue is empty\n");
                else
                    printf("Queue is not empty\n");
                break;
            case 5:
                printf("Number of elements in the queue: %d\n", count());
                break;
            case 6:
                return 0;
            default:
                printf("Invalid choice\n");
        }
    }
}
